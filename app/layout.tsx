import type { Metadata } from "next";
import Script from "next/script";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ReduxProvider from "@/lib/store/Provider";
import { WishlistProvider } from "@/components/contexts/WishlistContext";
import WishlistDropdown from "@/components/WishlistDropdown";
import ThemeToggle from "@/components/ui/ThemeToggle";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased overflow-x-hidden`}
      >
        {/* Ensure theme class is applied before React hydrates to avoid mismatches */}
        <Script id="theme-init" strategy="beforeInteractive">
          {`(function(){try{var t=localStorage.getItem('theme');var isDark=false;if(t==='dark')isDark=true;else if(t==='light')isDark=false;else isDark=window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches;if(isDark)document.documentElement.classList.add('dark');else document.documentElement.classList.remove('dark')}catch(e){}})();`}
        </Script>
        <ReduxProvider>
          <WishlistProvider>
            <div
              style={{
                background: "var(--site-bg)",
                color: "var(--site-foreground)",
              }}
              className="min-h-screen"
            >
              {children}
              <WishlistDropdown />
              <ThemeToggle />
            </div>
          </WishlistProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}
